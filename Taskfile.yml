version: '3'

tasks:
  default:
    cmds:
      - task -l
  make:
    cmds:
      - pyinstaller --onefile src/inkwell.py
      - chmod +x dist/inkwell
      - task: install
  install:
    cmds:
      - cp dist/inkwell /usr/local/bin/inkwell
  reqs:
    dir: src
    cmds:
      - pipreqs --force
  set-version:
    vars:
      version: '{{default "0.0.0" .CLI_ARGS}}'
    cmds:
      - awk '/^__version__/ { print "__version__ = \"{{.version}}\""; next }1' src/inkwell.py > temp && mv temp src/inkwell.py
  release:*:
    desc: Create a new release, task release -- [patch|minor|major]
    vars:
      STEP: '{{index .MATCH 0}}'
      BRANCH:
        sh: git rev-parse --abbrev-ref HEAD
      PRERELEASE:
        sh: |
          if [ "{{.BRANCH}}" != "main" ]; then
            echo "--prerelease"
          fi
    cmds:
      - |
        VERSION=$(gh release list --json tagName | jq -r '.[] | .tagName' | sort -V | tail -n 1)
        MAJOR=$(echo $VERSION | cut -d. -f1)
        MINOR=$(echo $VERSION | cut -d. -f2)
        PATCH=$(echo $VERSION | cut -d. -f3)
        
        echo "Current version: $VERSION"
        if [ "{{.STEP}}" = "major" ]; then
          MAJOR=$((MAJOR+1))
          MINOR=0
          PATCH=0
        elif [ "{{.STEP}}" = "minor" ]; then
          MINOR=$((MINOR+1))
          PATCH=0
        elif [ "{{.STEP}}" = "patch" ]; then
          PATCH=$((PATCH+1))
        else
          echo "Invalid step: {{.STEP}}"
          exit 1
        fi
        VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $VERSION"
        
        task set-version -- $VERSION
        task make
        task set-version

        gh release create "$VERSION" --generate-notes --target {{.BRANCH}} {{.PRERELEASE}} ./dist/inkwell
        if [ "{{.BRANCH}}" = "main" ]; then
          gh release delete latest
          gh release create latest --generate-notes --target main ./dist/inkwell
        fi
    silent: true
